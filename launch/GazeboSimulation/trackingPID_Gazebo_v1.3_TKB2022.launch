<?xml version="1.0" encoding="UTF-8"?>
<!-- Use turtlebot3 as the robot to control-->
<!-- v1.1 use gazebo to simulate TKB2022 and initialize robot position-->
<!-- v1.2 change trajectory file to TKB2022_RevE.yaml : update the waypoints at corner -->
<!-- v1.3 add PS4 controller to simulate the Disturbance -->
<launch>`
    <!-- Environmrnt Parameters -->
    <arg name="rviz" default="true"/>
    <arg name="model" default="waffle_pi" doc="model type [burger, waffle, waffle_pi]"/> 
    <arg name="map_file" default="$(find tracking_pid)/maps/TKB2022Map.yaml"/>
    <arg name="trajectory_file" default="$(find tracking_pid)/trajectories/TKB2022_RevE.yaml"/>
    <arg name="ps4name" default="/dev/input/js0" />

    <!-- 1. Start Gazebo Environment -->
    <include file="$(find turtlebot3_gazebo)/launch/turtlebot3_empty_world.launch">
    	<arg name="model" value="$(arg model)" />
	<arg name="x_pos" value="90"/>
	<arg name="y_pos" value="335.5"/>
    </include>

    <!-- 2. Start robot_state_publisher-->
    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
	<arg name="model" value="$(arg model)" />
    </include>

    <!-- Interpolator -->
    <node name="interpolator" pkg="tracking_pid" type="path_interpolator">
        <param name="target_x_vel" value="0.26"/> 
        <param name="target_x_acc" value="0.5"/> 
        <param name="target_yaw_vel" value="1.82"/>  
        <param name="target_yaw_acc" value="0.1"/>
	<param name="loop" value="-1"/>  
    </node>

    <!-- PID controller -->
    <node name="controller" pkg="tracking_pid" type="controller" output="screen">
      <remap from="move_base/cmd_vel" to="/cmd_vel"/>
      <remap from="local_trajectory" to="trajectory"/>
      <param name="controller_debug_enabled" value="True"/>
      <param name="l" value="0.2"/>
      <param name="track_base_link" value="True"/>  
      <param name="Kp_long" value="5.0"/>
      <param name="Ki_long" value="1.0"/>
      <param name="Kd_long" value="1.0"/>                                            
      <param name="Kp_ang" value="1.0"/>
      <param name="Ki_ang" value="1.0"/>
      <param name="Kd_ang" value="1.3"/>                                            
    </node>

   <!-- Start PS4 Joystick -->
    <node pkg="joy" type="joy_node" name="ps4_joy" output="screen" >
      <param name="dev" type="string" value="$(arg ps4name)" />
      <param name="deadzone" value="0.05" />
    </node>

    <!-- 3. Start PS4 Controller node -->
    <node pkg="ps4controller" type="kobuki_ps4_controller.py" name="ps4Stick" />
    
    <!-- Map server -->
    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

    <!-- Test path -->
    <node name="publish_path" pkg="rostopic" type="rostopic" args="pub --latch /path nav_msgs/Path --file=$(arg trajectory_file)"/> 
    
    <!-- static tf transformation-->
    <node pkg="tf" type="static_transform_publisher" args=" 0 0 0 0 0 0 map path_frame 100" 		name="path_frame_tfpub"/>
    <node pkg="tf" type="static_transform_publisher" args=" 0 0 0 0 0 0 map odom 100"       		name="odom_frame_tfpub"/>

    <!-- Rviz -->
    <node if="$(arg rviz)" name="$(anon rviz)" pkg="rviz" type="rviz" args="-d $(find tracking_pid)/test/tracking_pid/controller_tb3.rviz" />

    <!-- test script -->
    <test test-name="rostest_tracking_pid_node" pkg="tracking_pid" type="test_tracking_pid_system.py" />

</launch>
